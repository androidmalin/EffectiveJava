1.申请一个新的栈，记为 stack。然后将头节点 head 压入 stack 中。
2.从 stack 中弹出栈顶节点，记为 cur，然后打印 cur 节点的值，再将节点 cur 的右孩子节
点(不为空的话)先压入 stack 中，最后将 cur 的左孩子节点(不为空的话)压入 stack 中。 3.不断重复步骤 2，直到 stack 为空，全部过程结束。
下面举例说明整个过程，一棵二叉树如图 3-1 所示。
``````1
````/```\
``2```````3
`/`\`````/`\
4```5```6```7
节点 1 先入栈，然后弹出并打印。接下来先把节点 3 压入 stack，再把节点 2 压入，stack 从栈顶到栈底依次为 2，3。
节点 2 弹出并打印，把节点 5 压入 stack，再把节点 4 压入，stack 从栈顶到栈底为 4，5，3。 节点 4 弹出并打印，节点 4 没有孩子节点压入 stack，stack 从栈顶到栈底依次为 5，3。 节点 5 弹出并打印，节点 5 没有孩子节点压入 stack，stack 从栈顶到栈底依次为 3。
节点 3 弹出并打印，把节点 7 压入 stack，再把节点 6 压入，stack 从栈顶到栈底为 6，7。 节点 6 弹出并打印，节点 6 没有孩子节点压入 stack，stack 目前从栈顶到栈底为 7。
节点 7 弹出并打印，节点 7 没有孩子节点压入 stack，stack 已经为空，过程停止。 整个过程请参看如下代码中的 preOrderUnRecur 方法。